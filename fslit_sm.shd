/*

fslit_sm.shd

*/
#include "common"
#include "sdf"

uniform sampler2D texUnit0;
uniform sampler2D texUnitEnv;	// This will contain the environment map

uniform lowp  vec4  fogColor;

uniform       int   keyholeCanDissolve;
uniform       vec3  playerPosition;
uniform       vec3  cameraPosition;

uniform       int   worldtimerTimeOfDay;

varying highp vec4  vPosOut;
varying highp vec3  vWorldCoord;
varying       vec4  vColorOut;
varying       vec2  vTc;
varying       vec2  vTcEnv;
varying       float fFogFragCoord;

void main (void) {
	vec4 decal = asLinear(texture2D(texUnit0, vTc.xy));
	vec3 color = vColorOut.rgb * mix(asLinear(texture2D(texUnitEnv, vTcEnv).rgb), decal.rgb, decal.a);

	if (keyholeCanDissolve != 0) { // Isolate this conditional in hopes that the driver will use dynamic branching.
        float keyholeDistance = keyholeSdf(playerPosition, cameraPosition, vWorldCoord) + KEYHOLE_BREAKUP_SCALE * simplexNoise(vPosOut.xy * KEYHOLE_NOISE_SCALE);
        clip(keyholeDistance);
        color *= smoothstep(0.0, KEYHOLE_DARK_BAND_SIZE, keyholeDistance); // Darken edges. Clipped areas will end up black, but we can't see them anyway.
    }

	gl_FragColor = tonemapOutput(mix(color, fogColor.rgb, saturate(fFogFragCoord)), 1.0); // Gamma correct/tonemap before blending/raster out.
}