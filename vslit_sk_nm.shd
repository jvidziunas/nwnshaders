/*

vslit_sk_nm.shd

*/
#include "common"

#define MAX_BONES 128

uniform highp mat4 m_mvp;
uniform highp mat4 m_mv;
uniform highp mat3 m_normal;
uniform highp mat4 m_texture;
uniform highp mat4 m_m;
uniform highp mat4 m_bones [MAX_BONES];
uniform       int  idxmap  [MAX_BONES];

uniform         int   fogEnabled;
uniform mediump float fogEnd;
uniform mediump float fogStart;

attribute      vec4   vPos;
attribute      vec4   vIndex;
attribute      vec4   vWeight;
attribute      vec2   vTcIn;
attribute      vec3   vNormal;
attribute      vec3   vTangent;
attribute      float  fHandedness;

varying         vec4  vPosOut;
varying highp   vec3  vWorldCoord;
varying         vec2  vTc;
varying         vec3  vNormalOut;
varying         vec3  vTangentOut;
varying         float fTextureHandedness;
varying         vec4  vColorOut;
varying         vec3  vStaticLightDirOut;
varying         float fFogFragCoord;

void main (void) {
	int index            = idxmap[int(vIndex.x)];
	vec4 vSkinnedPos     = (m_bones[index] * vPos) * vWeight.x;
	vec3 vSkinnedTangent = (mat3(m_bones[index]) * vTangent) * vWeight.x;
	vec3 vSkinnedNormal  = (mat3(m_bones[index]) * vNormal) * vWeight.x;

	index                = idxmap[int(vIndex.y)];
	vSkinnedPos          = (m_bones[index] * vPos) * vWeight.y + vSkinnedPos;
	vSkinnedTangent      = (mat3(m_bones[index]) * vTangent) * vWeight.y + vSkinnedTangent;
	vSkinnedNormal       = (mat3(m_bones[index]) * vNormal) * vWeight.y + vSkinnedNormal;

	index                = idxmap[int(vIndex.z)];
	vSkinnedPos          = (m_bones[index] * vPos) * vWeight.z + vSkinnedPos;
	vSkinnedTangent      = (mat3(m_bones[index]) * vTangent) * vWeight.z + vSkinnedTangent;
	vSkinnedNormal       = (mat3(m_bones[index]) * vNormal) * vWeight.z + vSkinnedNormal;

	index                = idxmap[int(vIndex.w)];
	vSkinnedPos          = (m_bones[index] * vPos) * vWeight.w + vSkinnedPos;
	vSkinnedTangent      = (mat3(m_bones[index]) * vTangent) * vWeight.w + vSkinnedTangent;
	vSkinnedNormal       = (mat3(m_bones[index]) * vNormal) * vWeight.w + vSkinnedNormal;

	gl_Position = m_mvp * vSkinnedPos;
	vPosOut     = m_mv  * vSkinnedPos;
    vWorldCoord = (m_m  * vSkinnedPos).xyz;
	
	vTc = vTcIn;
	
	vTangentOut        = m_normal * vSkinnedTangent;
	vNormalOut         = m_normal * vSkinnedNormal;
	fTextureHandedness = fHandedness;
	
	vColorOut          = vec4(0.0, 0.0, 0.0, 1.0);
	vStaticLightDirOut = vec3(0.0);

	fFogFragCoord = (fogEnabled != 0) ? ffog(vPosOut.z, fogStart, fogEnd) : 0.0;
}