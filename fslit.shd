/*

fslit.shd

*/
#include "common"
#include "sdf"

uniform sampler2D   texUnit0; // base map

uniform       int   texture0Bound;

uniform lowp  vec4  fogColor;

uniform       int   keyholeCanDissolve;
uniform       vec3  playerPosition;
uniform       vec3  cameraPosition;

uniform       int   worldtimerTimeOfDay;

varying       vec4  vPosOut;
varying highp vec3  vWorldCoord;
varying       vec2  vTc;
varying       vec4  vColorOut;
varying       float fFogFragCoord;

void main (void) {
	vec4 color  = (texture0Bound != 0) ? asLinear(texture2D(texUnit0, vTc.xy)) : vec4(1.0);
    color      *= vColorOut;

    if (keyholeCanDissolve != 0) { // Isolate this conditional in hopes that the driver will use dynamic branching.
        float keyholeDistance = keyholeSdf(playerPosition, cameraPosition, vWorldCoord) + KEYHOLE_BREAKUP_SCALE * simplexNoise(vPosOut.xy * KEYHOLE_NOISE_SCALE);
        clip(keyholeDistance);
        color.rgb *= smoothstep(0.0, KEYHOLE_DARK_BAND_SIZE, keyholeDistance); // Darken edges. Clipped areas will end up black, but we can't see them anyway.
    }
	
	gl_FragColor = tonemapOutput(mix(color.rgb, fogColor.rgb, saturate(fFogFragCoord)), color.a);
}